Node não entende typescript:

- Para produção, ocorre um build que converter o TS
- yarn add ts-node-dev -D -> faz a conversão automática do TS, considerando que 
o node não consegue reconhecer Typescript 

TIPOS DE MÉTODOS:
* GET - buscar uma informação
* POST - inserir/criar uma informação
* PUT - alterar uma informação
* DELETE - remover um dado
* PATCH - alterar uma informação específica

REQUEST - informação que está entrando
RESPONSE - informação que está saindo

TIPOS DE PARÂMETROS:
* Routers Params - http://localhost3000/produtos/983284
* Query Params - http://localhost3000/produtos?name=teclado&description=tecladotop
* Body Params - {
    "name": "teclado",
    "description": "teclado show"
}

MIGRATIONS
* Utilizadas para o gerenciamento do banco de dados.
* Responsável por deixar todos os dev com as mesmas configurações.
* Funciona como um "GitHub" para banco de dados 

Beekeper para acessar o banco de dados local

yarn typeorm migration:create -n CreateUsers -> criação de migration

 * Up - criação da tabela
 * Down - drop da tabela  

yarn typeorm migration:run - rodar migratios para criar tabelas
yarn typeorm migration:revert - remove a ultima migration executada (down)

Entidade <- -> ORM <- -> DB

Repositórios - responsável por fazer a ligação entre as entidades e banco de dados

-> server -> routes -> controller -> service -> ...

middleware - interceptadores, ficam entre a requisição e resposta. Conseguem parar requisição ou adicionar um informação a ela
Exemplo: app.use(express.json())